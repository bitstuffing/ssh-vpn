/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.mit.jgss.swig;

public class gsswrapper implements gsswrapperConstants {

    
    /*
     * The macros that test status codes for error conditions.  Note that the
     * GSS_ERROR() macro has changed slightly from the V1 GSSAPI so that it 
     * now evaluates its argument only once.
     */
    public static final long GSS_CALLING_ERROR(long x)
    {
        return (x & (gsswrapperConstants.GSS_C_CALLING_ERROR_MASK <<
                    gsswrapperConstants.GSS_C_CALLING_ERROR_OFFSET));
    }

    public static final long GSS_ROUTINE_ERROR(long x)
    {
        return (x & (gsswrapperConstants.GSS_C_ROUTINE_ERROR_MASK <<
                    gsswrapperConstants.GSS_C_ROUTINE_ERROR_OFFSET));
    }
    
    public static final long GSS_SUPPLEMENTARY_INFO(long x)
    {
        return (x & (gsswrapperConstants.GSS_C_SUPPLEMENTARY_MASK <<
                    gsswrapperConstants.GSS_C_SUPPLEMENTARY_OFFSET));
    }

    public static final long GSS_ERROR(long x)
    {
        return (x & ((gsswrapperConstants.GSS_C_CALLING_ERROR_MASK <<
                    gsswrapperConstants.GSS_C_CALLING_ERROR_OFFSET) |
                    (gsswrapperConstants.GSS_C_ROUTINE_ERROR_MASK) <<
                    gsswrapperConstants.GSS_C_ROUTINE_ERROR_OFFSET));
    }

    /* XXXX these are not part of the GSSAPI C bindings!  (but should be) */
    public static final long GSS_CALLING_ERROR_FIELD(long x)
    {
        return ( (x >> gsswrapperConstants.GSS_C_CALLING_ERROR_OFFSET)
                    & gsswrapperConstants.GSS_C_CALLING_ERROR_MASK);
    }
    public static final long GSS_ROUTINE_ERROR_FIELD(long x)
    {
        return ( (x >> gsswrapperConstants.GSS_C_ROUTINE_ERROR_OFFSET)
                    & gsswrapperConstants.GSS_C_ROUTINE_ERROR_MASK);
    }
    public static final long GSS_SUPPLEMENTARY_INFO_FIELD(long x)
    {
        return ( (x >> gsswrapperConstants.GSS_C_SUPPLEMENTARY_OFFSET)
                    & gsswrapperConstants.GSS_C_SUPPLEMENTARY_MASK);
    }

  public static void setGSS_C_NT_USER_NAME(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_USER_NAME_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_USER_NAME() {
    long cPtr = gsswrapperJNI.GSS_C_NT_USER_NAME_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_MACHINE_UID_NAME(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_MACHINE_UID_NAME_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_MACHINE_UID_NAME() {
    long cPtr = gsswrapperJNI.GSS_C_NT_MACHINE_UID_NAME_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_STRING_UID_NAME(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_STRING_UID_NAME_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_STRING_UID_NAME() {
    long cPtr = gsswrapperJNI.GSS_C_NT_STRING_UID_NAME_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_HOSTBASED_SERVICE_X(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_HOSTBASED_SERVICE_X_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_HOSTBASED_SERVICE_X() {
    long cPtr = gsswrapperJNI.GSS_C_NT_HOSTBASED_SERVICE_X_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_HOSTBASED_SERVICE(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_HOSTBASED_SERVICE_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_HOSTBASED_SERVICE() {
    long cPtr = gsswrapperJNI.GSS_C_NT_HOSTBASED_SERVICE_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_ANONYMOUS(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_ANONYMOUS_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_ANONYMOUS() {
    long cPtr = gsswrapperJNI.GSS_C_NT_ANONYMOUS_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_NT_EXPORT_NAME(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_NT_EXPORT_NAME_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_NT_EXPORT_NAME() {
    long cPtr = gsswrapperJNI.GSS_C_NT_EXPORT_NAME_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static long gss_acquire_cred(long[] arg0, gss_name_t_desc arg1, long arg2, gss_OID_set_desc arg3, int arg4, gss_cred_id_t_desc arg5, gss_OID_set_desc arg6, long[] arg7) {
    return gsswrapperJNI.gss_acquire_cred(arg0, gss_name_t_desc.getCPtr(arg1), arg1, arg2, gss_OID_set_desc.getCPtr(arg3), arg3, arg4, arg5, arg6, arg7);
  }

  public static long gss_release_cred(long[] OUTPUT, gss_cred_id_t_desc arg1) {
    return gsswrapperJNI.gss_release_cred(OUTPUT, arg1);
  }

  public static long gss_init_sec_context(long[] arg0, gss_cred_id_t_desc arg1, gss_ctx_id_t_desc arg2, gss_name_t_desc arg3, gss_OID_desc arg4, long arg5, long arg6, gss_channel_bindings_struct arg7, gss_buffer_desc arg8, gss_OID_desc arg9, gss_buffer_desc arg10, long[] arg11, long[] arg12) {
    return gsswrapperJNI.gss_init_sec_context(arg0, gss_cred_id_t_desc.getCPtr(arg1), arg1, arg2, gss_name_t_desc.getCPtr(arg3), arg3, gss_OID_desc.getCPtr(arg4), arg4, arg5, arg6, gss_channel_bindings_struct.getCPtr(arg7), arg7, gss_buffer_desc.getCPtr(arg8), arg8, arg9, gss_buffer_desc.getCPtr(arg10), arg10, arg11, arg12);
  }

  public static long gss_accept_sec_context(long[] arg0, gss_ctx_id_t_desc arg1, gss_cred_id_t_desc arg2, gss_buffer_desc arg3, gss_channel_bindings_struct arg4, gss_name_t_desc arg5, gss_OID_desc arg6, gss_buffer_desc arg7, long[] arg8, long[] arg9, gss_cred_id_t_desc arg10) {
    return gsswrapperJNI.gss_accept_sec_context(arg0, arg1, gss_cred_id_t_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, gss_channel_bindings_struct.getCPtr(arg4), arg4, arg5, arg6, gss_buffer_desc.getCPtr(arg7), arg7, arg8, arg9, arg10);
  }

  public static long gss_process_context_token(long[] OUTPUT, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2) {
    return gsswrapperJNI.gss_process_context_token(OUTPUT, gss_ctx_id_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2);
  }

  public static long gss_delete_sec_context(long[] OUTPUT, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2) {
    return gsswrapperJNI.gss_delete_sec_context(OUTPUT, arg1, gss_buffer_desc.getCPtr(arg2), arg2);
  }

  public static long gss_context_time(long[] arg0, gss_ctx_id_t_desc arg1, long[] arg2) {
    return gsswrapperJNI.gss_context_time(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_get_mic(long[] OUTPUT, gss_ctx_id_t_desc arg1, long arg2, gss_buffer_desc arg3, gss_buffer_desc arg4) {
    return gsswrapperJNI.gss_get_mic(OUTPUT, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, gss_buffer_desc.getCPtr(arg3), arg3, gss_buffer_desc.getCPtr(arg4), arg4);
  }

  public static long gss_verify_mic(long[] arg0, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, long[] arg4) {
    return gsswrapperJNI.gss_verify_mic(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, arg4);
  }

  public static long gss_wrap(long[] arg0, gss_ctx_id_t_desc arg1, int arg2, long arg3, gss_buffer_desc arg4, int[] arg5, gss_buffer_desc arg6) {
    return gsswrapperJNI.gss_wrap(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, arg3, gss_buffer_desc.getCPtr(arg4), arg4, arg5, gss_buffer_desc.getCPtr(arg6), arg6);
  }

  public static long gss_unwrap(long[] arg0, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, int[] arg4, long[] arg5) {
    return gsswrapperJNI.gss_unwrap(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, arg4, arg5);
  }

  public static long gss_display_status(long[] OUTPUT, long arg1, int arg2, gss_OID_desc arg3, long[] INOUT, gss_buffer_desc arg5) {
    return gsswrapperJNI.gss_display_status(OUTPUT, arg1, arg2, gss_OID_desc.getCPtr(arg3), arg3, INOUT, gss_buffer_desc.getCPtr(arg5), arg5);
  }

  public static long gss_indicate_mechs(long[] OUTPUT, gss_OID_set_desc arg1) {
    return gsswrapperJNI.gss_indicate_mechs(OUTPUT, arg1);
  }

  public static long gss_compare_name(long[] arg0, gss_name_t_desc arg1, gss_name_t_desc arg2, int[] arg3) {
    return gsswrapperJNI.gss_compare_name(arg0, gss_name_t_desc.getCPtr(arg1), arg1, gss_name_t_desc.getCPtr(arg2), arg2, arg3);
  }

  public static long gss_display_name(long[] OUTPUT, gss_name_t_desc arg1, gss_buffer_desc arg2, gss_OID_desc arg3) {
    return gsswrapperJNI.gss_display_name(OUTPUT, gss_name_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, arg3);
  }

  public static long gss_import_name(long[] OUTPUT, gss_buffer_desc input_name_buffer, gss_OID_desc input_name_type, gss_name_t_desc arg3) {
    return gsswrapperJNI.gss_import_name(OUTPUT, gss_buffer_desc.getCPtr(input_name_buffer), input_name_buffer, gss_OID_desc.getCPtr(input_name_type), input_name_type, arg3);
  }

  public static long gss_release_name(long[] OUTPUT, gss_name_t_desc INOUT) {
    return gsswrapperJNI.gss_release_name(OUTPUT, INOUT);
  }

  public static long gss_release_buffer(long[] OUTPUT, gss_buffer_desc arg1) {
    return gsswrapperJNI.gss_release_buffer(OUTPUT, gss_buffer_desc.getCPtr(arg1), arg1);
  }

  public static long gss_release_oid_set(long[] OUTPUT, gss_OID_set_desc arg1) {
    return gsswrapperJNI.gss_release_oid_set(OUTPUT, arg1);
  }

  public static long gss_inquire_cred(long[] arg0, gss_cred_id_t_desc arg1, gss_name_t_desc arg2, long[] arg3, int[] arg4, gss_OID_set_desc arg5) {
    return gsswrapperJNI.gss_inquire_cred(arg0, gss_cred_id_t_desc.getCPtr(arg1), arg1, arg2, arg3, arg4, arg5);
  }

  public static long gss_inquire_context(long[] arg0, gss_ctx_id_t_desc arg1, gss_name_t_desc arg2, gss_name_t_desc arg3, long[] arg4, gss_OID_desc arg5, long[] arg6, int[] arg7, int[] arg8) {
    return gsswrapperJNI.gss_inquire_context(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
  }

  public static long gss_wrap_size_limit(long[] arg0, gss_ctx_id_t_desc arg1, int arg2, long arg3, long arg4, long[] arg5) {
    return gsswrapperJNI.gss_wrap_size_limit(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, arg3, arg4, arg5);
  }

  public static long gss_add_cred(long[] arg0, gss_cred_id_t_desc arg1, gss_name_t_desc arg2, gss_OID_desc arg3, int arg4, long arg5, long arg6, gss_cred_id_t_desc arg7, gss_OID_set_desc arg8, long[] arg9, long[] arg10) {
    return gsswrapperJNI.gss_add_cred(arg0, gss_cred_id_t_desc.getCPtr(arg1), arg1, gss_name_t_desc.getCPtr(arg2), arg2, gss_OID_desc.getCPtr(arg3), arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
  }

  public static long gss_inquire_cred_by_mech(long[] arg0, gss_cred_id_t_desc arg1, gss_OID_desc arg2, gss_name_t_desc arg3, long[] arg4, long[] arg5, int[] arg6) {
    return gsswrapperJNI.gss_inquire_cred_by_mech(arg0, gss_cred_id_t_desc.getCPtr(arg1), arg1, gss_OID_desc.getCPtr(arg2), arg2, arg3, arg4, arg5, arg6);
  }

  public static long gss_export_sec_context(long[] OUTPUT, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2) {
    return gsswrapperJNI.gss_export_sec_context(OUTPUT, arg1, gss_buffer_desc.getCPtr(arg2), arg2);
  }

  public static long gss_import_sec_context(long[] OUTPUT, gss_buffer_desc arg1, gss_ctx_id_t_desc arg2) {
    return gsswrapperJNI.gss_import_sec_context(OUTPUT, gss_buffer_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_release_oid(long[] OUTPUT, gss_OID_desc arg1) {
    return gsswrapperJNI.gss_release_oid(OUTPUT, arg1);
  }

  public static long gss_create_empty_oid_set(long[] OUTPUT, gss_OID_set_desc arg1) {
    return gsswrapperJNI.gss_create_empty_oid_set(OUTPUT, arg1);
  }

  public static long gss_add_oid_set_member(long[] OUTPUT, gss_OID_desc arg1, gss_OID_set_desc arg2) {
    return gsswrapperJNI.gss_add_oid_set_member(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_test_oid_set_member(long[] arg0, gss_OID_desc arg1, gss_OID_set_desc arg2, int[] arg3) {
    return gsswrapperJNI.gss_test_oid_set_member(arg0, gss_OID_desc.getCPtr(arg1), arg1, gss_OID_set_desc.getCPtr(arg2), arg2, arg3);
  }

  public static long gss_str_to_oid(long[] OUTPUT, gss_buffer_desc arg1, gss_OID_desc arg2) {
    return gsswrapperJNI.gss_str_to_oid(OUTPUT, gss_buffer_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_oid_to_str(long[] OUTPUT, gss_OID_desc arg1, gss_buffer_desc arg2) {
    return gsswrapperJNI.gss_oid_to_str(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2);
  }

  public static long gss_inquire_names_for_mech(long[] OUTPUT, gss_OID_desc arg1, gss_OID_set_desc arg2) {
    return gsswrapperJNI.gss_inquire_names_for_mech(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_inquire_mechs_for_name(long[] OUTPUT, gss_name_t_desc arg1, gss_OID_set_desc arg2) {
    return gsswrapperJNI.gss_inquire_mechs_for_name(OUTPUT, gss_name_t_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_sign(long[] OUTPUT, gss_ctx_id_t_desc arg1, int arg2, gss_buffer_desc arg3, gss_buffer_desc arg4) {
    return gsswrapperJNI.gss_sign(OUTPUT, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, gss_buffer_desc.getCPtr(arg3), arg3, gss_buffer_desc.getCPtr(arg4), arg4);
  }

  public static long gss_verify(long[] arg0, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, int[] arg4) {
    return gsswrapperJNI.gss_verify(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, arg4);
  }

  public static long gss_seal(long[] arg0, gss_ctx_id_t_desc arg1, int arg2, int arg3, gss_buffer_desc arg4, int[] arg5, gss_buffer_desc arg6) {
    return gsswrapperJNI.gss_seal(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, arg3, gss_buffer_desc.getCPtr(arg4), arg4, arg5, gss_buffer_desc.getCPtr(arg6), arg6);
  }

  public static long gss_unseal(long[] arg0, gss_ctx_id_t_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, int[] arg4, int[] arg5) {
    return gsswrapperJNI.gss_unseal(arg0, gss_ctx_id_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, arg4, arg5);
  }

  public static long gss_export_name(long[] OUTPUT, gss_name_t_desc arg1, gss_buffer_desc arg2) {
    return gsswrapperJNI.gss_export_name(OUTPUT, gss_name_t_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2);
  }

  public static long gss_duplicate_name(long[] OUTPUT, gss_name_t_desc arg1, gss_name_t_desc arg2) {
    return gsswrapperJNI.gss_duplicate_name(OUTPUT, gss_name_t_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_canonicalize_name(long[] OUTPUT, gss_name_t_desc arg1, gss_OID_desc arg2, gss_name_t_desc arg3) {
    return gsswrapperJNI.gss_canonicalize_name(OUTPUT, gss_name_t_desc.getCPtr(arg1), arg1, gss_OID_desc.getCPtr(arg2), arg2, arg3);
  }

  public static long gss_pseudo_random(long[] OUTPUT, gss_ctx_id_t_desc arg1, int arg2, gss_buffer_desc arg3, int arg4, gss_buffer_desc arg5) {
    return gsswrapperJNI.gss_pseudo_random(OUTPUT, gss_ctx_id_t_desc.getCPtr(arg1), arg1, arg2, gss_buffer_desc.getCPtr(arg3), arg3, arg4, gss_buffer_desc.getCPtr(arg5), arg5);
  }

  public static long gss_store_cred(long[] arg0, gss_cred_id_t_desc arg1, int arg2, gss_OID_desc arg3, long arg4, long arg5, gss_OID_set_desc arg6, int[] arg7) {
    return gsswrapperJNI.gss_store_cred(arg0, gss_cred_id_t_desc.getCPtr(arg1), arg1, arg2, gss_OID_desc.getCPtr(arg3), arg3, arg4, arg5, arg6, arg7);
  }

  public static long gss_set_neg_mechs(long[] OUTPUT, gss_cred_id_t_desc arg1, gss_OID_set_desc arg2) {
    return gsswrapperJNI.gss_set_neg_mechs(OUTPUT, gss_cred_id_t_desc.getCPtr(arg1), arg1, gss_OID_set_desc.getCPtr(arg2), arg2);
  }

  public static long gss_indicate_mechs_by_attrs(long[] OUTPUT, gss_OID_set_desc arg1, gss_OID_set_desc arg2, gss_OID_set_desc arg3, gss_OID_set_desc arg4) {
    return gsswrapperJNI.gss_indicate_mechs_by_attrs(OUTPUT, gss_OID_set_desc.getCPtr(arg1), arg1, gss_OID_set_desc.getCPtr(arg2), arg2, gss_OID_set_desc.getCPtr(arg3), arg3, arg4);
  }

  public static long gss_inquire_attrs_for_mech(long[] OUTPUT, gss_OID_desc arg1, gss_OID_set_desc arg2, gss_OID_set_desc arg3) {
    return gsswrapperJNI.gss_inquire_attrs_for_mech(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, arg2, arg3);
  }

  public static long gss_display_mech_attr(long[] OUTPUT, gss_OID_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, gss_buffer_desc arg4) {
    return gsswrapperJNI.gss_display_mech_attr(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, gss_buffer_desc.getCPtr(arg4), arg4);
  }

  public static void setGSS_C_MA_MECH_CONCRETE(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MECH_CONCRETE_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MECH_CONCRETE() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MECH_CONCRETE_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_MECH_PSEUDO(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MECH_PSEUDO_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MECH_PSEUDO() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MECH_PSEUDO_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_MECH_COMPOSITE(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MECH_COMPOSITE_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MECH_COMPOSITE() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MECH_COMPOSITE_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_MECH_NEGO(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MECH_NEGO_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MECH_NEGO() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MECH_NEGO_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_MECH_GLUE(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MECH_GLUE_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MECH_GLUE() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MECH_GLUE_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_NOT_MECH(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_NOT_MECH_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_NOT_MECH() {
    long cPtr = gsswrapperJNI.GSS_C_MA_NOT_MECH_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_DEPRECATED(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_DEPRECATED_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_DEPRECATED() {
    long cPtr = gsswrapperJNI.GSS_C_MA_DEPRECATED_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_NOT_DFLT_MECH(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_NOT_DFLT_MECH_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_NOT_DFLT_MECH() {
    long cPtr = gsswrapperJNI.GSS_C_MA_NOT_DFLT_MECH_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_ITOK_FRAMED(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_ITOK_FRAMED_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_ITOK_FRAMED() {
    long cPtr = gsswrapperJNI.GSS_C_MA_ITOK_FRAMED_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_INIT(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_INIT_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_INIT() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_INIT_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_TARG(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_TARG_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_TARG() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_TARG_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_INIT_INIT(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_INIT_INIT_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_INIT_INIT() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_INIT_INIT_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_TARG_INIT(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_TARG_INIT_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_TARG_INIT() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_TARG_INIT_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_INIT_ANON(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_INIT_ANON_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_INIT_ANON() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_INIT_ANON_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_AUTH_TARG_ANON(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_AUTH_TARG_ANON_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_AUTH_TARG_ANON() {
    long cPtr = gsswrapperJNI.GSS_C_MA_AUTH_TARG_ANON_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_DELEG_CRED(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_DELEG_CRED_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_DELEG_CRED() {
    long cPtr = gsswrapperJNI.GSS_C_MA_DELEG_CRED_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_INTEG_PROT(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_INTEG_PROT_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_INTEG_PROT() {
    long cPtr = gsswrapperJNI.GSS_C_MA_INTEG_PROT_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_CONF_PROT(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_CONF_PROT_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_CONF_PROT() {
    long cPtr = gsswrapperJNI.GSS_C_MA_CONF_PROT_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_MIC(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_MIC_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_MIC() {
    long cPtr = gsswrapperJNI.GSS_C_MA_MIC_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_WRAP(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_WRAP_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_WRAP() {
    long cPtr = gsswrapperJNI.GSS_C_MA_WRAP_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_PROT_READY(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_PROT_READY_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_PROT_READY() {
    long cPtr = gsswrapperJNI.GSS_C_MA_PROT_READY_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_REPLAY_DET(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_REPLAY_DET_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_REPLAY_DET() {
    long cPtr = gsswrapperJNI.GSS_C_MA_REPLAY_DET_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_OOS_DET(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_OOS_DET_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_OOS_DET() {
    long cPtr = gsswrapperJNI.GSS_C_MA_OOS_DET_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_CBINDINGS(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_CBINDINGS_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_CBINDINGS() {
    long cPtr = gsswrapperJNI.GSS_C_MA_CBINDINGS_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_PFS(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_PFS_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_PFS() {
    long cPtr = gsswrapperJNI.GSS_C_MA_PFS_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_COMPRESS(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_COMPRESS_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_COMPRESS() {
    long cPtr = gsswrapperJNI.GSS_C_MA_COMPRESS_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static void setGSS_C_MA_CTX_TRANS(gss_OID_desc value) {
    gsswrapperJNI.GSS_C_MA_CTX_TRANS_set(gss_OID_desc.getCPtr(value), value);
  }

  public static gss_OID_desc getGSS_C_MA_CTX_TRANS() {
    long cPtr = gsswrapperJNI.GSS_C_MA_CTX_TRANS_get();
    return (cPtr == 0) ? null : new gss_OID_desc(cPtr, false);
  }

  public static long gss_inquire_saslname_for_mech(long[] OUTPUT, gss_OID_desc arg1, gss_buffer_desc arg2, gss_buffer_desc arg3, gss_buffer_desc arg4) {
    return gsswrapperJNI.gss_inquire_saslname_for_mech(OUTPUT, gss_OID_desc.getCPtr(arg1), arg1, gss_buffer_desc.getCPtr(arg2), arg2, gss_buffer_desc.getCPtr(arg3), arg3, gss_buffer_desc.getCPtr(arg4), arg4);
  }

  public static long gss_inquire_mech_for_saslname(long[] OUTPUT, gss_buffer_desc arg1, gss_OID_desc arg2) {
    return gsswrapperJNI.gss_inquire_mech_for_saslname(OUTPUT, gss_buffer_desc.getCPtr(arg1), arg1, arg2);
  }

  public static long gss_display_status_wrap(long min_stat, long status_value, int status_type, gss_OID_desc mech_type, long[] INOUT, gss_buffer_desc status_string) {
    return gsswrapperJNI.gss_display_status_wrap(min_stat, status_value, status_type, gss_OID_desc.getCPtr(mech_type), mech_type, INOUT, gss_buffer_desc.getCPtr(status_string), status_string);
  }

  public static byte[] getDescArray(gss_buffer_desc buffer) { 
    return gsswrapperJNI.getDescArray(gss_buffer_desc.getCPtr(buffer), buffer); 
}

  public static int setDescArray(gss_buffer_desc inputBuffer, byte[] javaArray) {
    return gsswrapperJNI.setDescArray(gss_buffer_desc.getCPtr(inputBuffer), inputBuffer, javaArray);
  }

}
